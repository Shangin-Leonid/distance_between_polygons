#ifndef READING_OBJECTS_FROM_FILE_H /* Страж подключения Reading_objects_from_file.h */
#define READING_OBJECTS_FROM_FILE_H


#include <stdio.h>
#include "geom_objects.h"


/* Коды ошибок (успешного) прочтения плоскостного чего-либо из файла */
typedef enum{
    rc_SUCCESFULLY_READ = 0,
    rc_END_OF_FILE = 1,
    rc_INCORRECT_INPUT_DATA = -1,
    rc_MEMORY_ALLOCATING_ERROR = -2,
    rc_FILE_ENDED_EARLIER_THAN_EXPECTED = -3,
    rc_POLYGON_HAS_SELF_INTERSECTION = -4,
    rc_NOT_POLYGON = -5,
    rc_UNIDENTIFIED_ERROR = -6,
} reading_code_t;


/*
    Функция считывания многоугольника из файла в переменную, переданную по ссылке.
    ВНИМАНИЕ: функция сама выделяет память под многоугольник и сама её очищает в случае ошибки прочтения!
    Возвращает код ошибки прочтения многоугольника.

    Формат чтения такой: угловая открывающая скобка, кол-во вершин многоугольника,
    делее в фигурных скобках перечислены точки (1-ая координата, точка с запятой, 2-ая координата),
    закрывающая угловая скобка. Между числом и служебным символом или между служебными символами
    может содержаться любое количество пробелов или переносов строки.
    Пример ввода:
    < 3 {-18.6;12} {-24.032    ;21.4    } {12
                ;57.5}     >
*/
extern reading_code_t Read_polygon_from_file(FILE * inp, polygon_t * polygon);


/*
    Функция считывания точки из файла в переменную, переданную по ссылке.
    Возвращает код ошибки прочтения точки.

    Формат чтения такой: фигурная открывающая скобка, 1-ая координата, точка с запятой, 2-ая координата,
    закрывающая фигурная скобка. Между числом и служебным символом или между служебными символами
    может содержаться любое количество пробелов или переносов строки.
    Пример ввода:
    {-24.032    ;21.4
          }
*/
extern reading_code_t Read_point_from_file(FILE * inp, point_t * p);


/*
    Функция получает выходной файл и код ошибки работы какой-либо функции чтения объекта плоскости.
    Ничего не возвращает. Печатает в файл информацию о соответствующей ошибке.
*/
extern void Print_reading_error_to_file(FILE * outp, reading_code_t status);


#endif /* READING_OBJECTS_FROM_FILE_H */
